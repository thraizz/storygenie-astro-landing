---
const { title, subtitle, description, linkTarget, isLeftText } = Astro.props;
---

<div class:list={["feature-card", isLeftText ? "text-left" : "text-right"]}>
  <div class="feature-card__content">
    <h3>{title}</h3>
    <p class="text-large">{subtitle}</p>
    <p>
      {description}
      <div class="button-wrapper">
        <div class="primary-button--outlined">
          <a href={linkTarget}> Learn more</a>
        </div>
      </div>
    </p>
  </div>
  <slot />
</div>

<style lang="scss">
  .feature-card {
    padding: 32px 32px;
    display: grid;
    @media screen and (min-width: 768px) {
      grid-template-columns: 1fr 1fr;
      padding: 64px 64px;
    }
    justify-content: center;
    align-items: center;

    gap: 4rem;
    // box-shadow: 0px 5px 47px rgba(99, 102, 241, 0.5);
    border-radius: 8px;

    border-radius: 16px;

    &__content {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
      h3 {
        font-size: 3rem;
        margin: 0;
      }
      p {
        margin: 0;
      }
    }
    &.text-right {
      background: url("noiseTexture.png") repeat,
        radial-gradient(85% 115% at 10% 5%, #6366f1 0%, #262e45 100%);
      background-blend-mode: soft-light, soft-light, normal;
      background-size: 100px, 100%;
      @media screen and (min-width: 768px) {
        .feature-card__content {
          order: 1;
        }
      }
    }
    &.text-left {
      background: url(noiseTexture.png) repeat,
        radial-gradient(93% 100% at 82% 12%, #6366f1 0%, #262e45 100%);
      background-blend-mode: soft-light, soft-light, normal;
      background-size: 100px, 100%;
      @media screen and (min-width: 768px) {
        .feature-card__content {
          order: -1;
        }
      }
    }
  }
  .button-wrapper {
    @media screen and (max-width: 768px) {
      display: none;
    }
    .primary-button--outlined {
      margin-top: 1rem;
    }
  }
</style>
